FROM localhost/gentoo/stage3:nomultilib-systemd-merged

ARG BINHOST_URI
ARG LOCAL_MIRROR
ARG PORTAGE_FEATURES='-pid-sandbox -network-sandbox -ipc-sandbox binpkg-ignore-signature'
ARG ANSIBLE_REPO
ARG SUBSTRACT_NO_OF_CPU_BY=1
ARG MICROARCH_LEVEL
ARG PORTAGE_CPU_FLAGS
ARG DISTCC_SERVERS='localhost'

RUN \
    --mount=type=tmpfs,tmpfs-size=100%,dst=/tmp \
    --mount=type=tmpfs,tmpfs-size=100%,dst=/var/tmp \
    \
    echo '#####        Configuring make.conf      ######' && \
    cp /etc/portage/make.conf /etc/portage/original-make.conf && \
    sed -i "s|-O2|-march=x86-64-${MICROARCH_LEVEL} -O2|g" /etc/portage/make.conf && \
    { \
      echo "GOAMD64=${MICROARCH_LEVEL}"; \
      echo "RUSTFLAGS='-C target-cpu=x86-64-${MICROARCH_LEVEL} -C strip=symbols -C opt-level=2'"; \
      echo "FEATURES='${PORTAGE_FEATURES}'"; \
      echo 'ACCEPT_KEYWORDS="~${ARCH}"'; \
      echo "GENTOO_MIRRORS='${LOCAL_MIRROR} http://ftp.fau.de/gentoo http://ftp.snt.utwente.nl/pub/os/linux/gentoo http://ftp-stud.hs-esslingen.de/pub/Mirrors/gentoo/ http://distfiles.gentoo.org'"; \
      echo "CPU_FLAGS_X86='${PORTAGE_CPU_FLAGS}'"; \
      echo "USE='lto jit -iptables nftables pgo -smartcard tofu graphite'"; \
      echo 'BINPKG_FORMAT="gpkg"'; \
      echo 'CLEAN_DELAY="3"'; \
      echo "MAKEOPTS=\"-j$(nproc --ignore=${SUBSTRACT_NO_OF_CPU_BY}) -l$(nproc)\""; \
    } >> /etc/portage/make.conf && \
    \
    if [ -n "${BINHOST_URI}" ]; then \
      echo '#####        Configuring binrepos.conf      ######' && \
      { \
      echo '[binhost]'; \
      echo "priority=100"; \
      echo "sync-uri=${BINHOST_URI}"; \
      } >> /etc/portage/binrepos.conf; \
    fi && \
    \
    echo '#####        Configuring locale.gen in case glibc needs update      ######' && \
    { \
    echo 'en_IN UTF-8'; \
    echo "en_US.UTF-8 UTF-8"; \
    echo "en_US ISO-8859-1"; \
    } >> /etc/locale.gen && \
    \
    if [ -d /var/db/repos/gentoo/.git ]; then \
      echo "#####    Found git Gentoo repo     #####" && \
      emerge -vgkbn --quiet-build dev-vcs/git && \
      { \
        echo '[gentoo]'; \
        echo 'location = /var/db/repos/gentoo'; \
        echo 'sync-type = git'; \
        echo 'sync-uri = https://github.com/gentoo-mirror/gentoo.git'; \
        echo 'clone-depth = 1'; \
        echo 'sync-depth = 1'; \
        echo 'autosync = yes'; \
      } >> /etc/portage/repos.conf; \
    fi && \
    \
    echo '######       Syncing gentoo repo       #######' && \
    emerge --sync && \
    \
    if [ -f /etc/portage/repos.conf ]; then \
      echo '#####        Removing repos.conf      #####' && \
      rm /etc/portage/repos.conf; \
    fi && \
    \
    echo '#######      Update portage,gcc,binutils,linux-headers if necessary       ######' && \
    emerge -v --quiet-build -gkb1u sys-apps/portage && \
    emerge -vgkbu1 --quiet-build -X "sys-devel/gcc:12" sys-devel/gcc sys-devel/binutils sys-kernel/linux-headers && \
    emerge -c sys-devel/binutils sys-devel/gcc ; \
    \
    emerge -vgkbn --quiet-build sys-devel/distcc && \
    echo '######         Enabling distcc        ########' && \
    echo 'FEATURES="${FEATURES} distcc"' >> /etc/portage/make.conf && \
    export PATH="/usr/lib/distcc/bin:${PATH}" && \
    echo "#########     New PATH env : ${PATH}     ######" && \
    distcc-config --set-hosts "${DISTCC_SERVERS}" && \
    echo '########    Distcc servers are set as follows      #######' && \
    distcc-config --get-hosts && \
    \
    emerge -vgkbn --quiet-build dev-vcs/git && \
    emerge -vgkbn1 --quiet-build -X 'dev-lang/rust' app-admin/ansible-core && \
    \
    mkdir -v /tmp/ansible-homelab && \
    git clone "${ANSIBLE_REPO}" /tmp/ansible-homelab && \
    echo '############         Installing ansible requirements            #########' && \
    cd /tmp/ansible-homelab && \
    ansible-galaxy install -r requirements.yml && \
    echo '############         Dirty trick to force it as container            #########' && \
    sed -i -e '/virtualization_type/d' /tmp/ansible-homelab/playbooks/set_facts.yml && \
    \
    { \
      echo 'gentoo_base_packages:'; \
      echo '  - app-editors/mg'; \
      echo '  - app-misc/tmux'; \
      echo '  - app-shells/bash-completion'; \
      echo '  - app-text/tree'; \
      echo '  - sys-apps/lsb-release'; \
      echo '  - sys-process/htop'; \
      echo 'portage_features:'; \
      echo "  - '${PORTAGE_FEATURES}'"; \
      echo "portage_local_mirror: '${LOCAL_MIRROR}'"; \
      echo "portage_march: x86-64-${MICROARCH_LEVEL}"; \
      echo "portage_goamd64: ${MICROARCH_LEVEL}"; \
      echo "portage_cpu_flags: '${PORTAGE_CPU_FLAGS}'"; \
      echo "gentoo_binpkg_server_uri: '${BINHOST_URI}'"; \
    } >> /tmp/ansible-homelab/host_vars/currenthost.yml && \
    \
    ansible-playbook -l currenthost local.yml && \
    \
    mv /etc/portage/default-make.conf /etc/portage/builder-make.conf && \
    mv /etc/portage/original-make.conf /etc/portage/default-make.conf && \
    if [ ! -d /var/db/repos/gentoo/.git ]; then \
      echo '#####        Found rsynced Gentoo repo      #####' && \
      echo '####       Switching to git Gentoo repo      #####' && \
      rm -rf /var/db/repos/gentoo && \
      emerge --sync; \
    fi && \
    \
    echo '############         Cleanup orphan packages            #########' && \
    emerge -c ; \
    \
    echo '############         Rebuilding whole stage3            #########' && \
    emerge -vgkb --quiet-build --with-bdeps=y -e -X "sys-devel/gcc:12" @world && \
    \
    echo '############         Post installation configurations            #########' && \
    \
    echo '############         setting mg as default editor            #########' && \
    eselect editor set mg && \
    \
    echo '############         Cleaning up            #########' && \
    emerge -c && \
    distcc-config --set-hosts "localhost" && \
    sed -i -e "s|${LOCAL_MIRROR}||g" /etc/portage/make.conf/mirrors && \
    rm -rf /root/.ansible /tmp/ansible* /var/tmp/portage && \
    rm /var/log/emerge.log /var/log/portage/elog/summary.log && \
    truncate -s0 /var/log/emerge* /etc/portage/binrepos.conf && \
    \
    echo '###########       CONGRATULATIONS !!! EVERYTHING SUCCESSFUL      #######'



LABEL \
    org.opencontainers.image.description="Gentoo with ~amd64, -march=x86-64-${MICROARCH_LEVEL}, nomultilib-systemd-merged-usr profile and few added utilities" \
    org.opencontainers.image.title='Gentoo for GenZ' \
    org.opencontainers.image.source='https://github.com/rahilarious/gentoo-containers' \
    org.opencontainers.image.url='https://github.com/rahilarious/gentoo-containers' \
    org.opencontainers.image.authors='Rahil Bhimjiani (rahil3108@gmail.com)'

CMD ["/usr/bin/bash"]
